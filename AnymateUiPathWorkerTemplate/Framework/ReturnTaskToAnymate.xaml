<Activity mc:Ignorable="sap sap2010" x:Class="ReturnTaskToAnymate" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:au="clr-namespace:Anymate.UiPath;assembly=Anymate.UiPath" xmlns:aut="clr-namespace:Anymate.UiPath.Tasks;assembly=Anymate.UiPath" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_SendToManual" Type="InArgument(x:Boolean)" />
    <x:Property Name="in_SendToError" Type="InArgument(x:Boolean)" />
    <x:Property Name="in_TaskId" Type="InArgument(x:Int64)" />
    <x:Property Name="in_Reason" Type="InArgument(x:String)" />
    <x:Property Name="in_Comment" Type="InArgument(x:String)" />
    <x:Property Name="in_AnymateClient" Type="InArgument(au:AnymateClient)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_RetryTask" Type="InArgument(x:Boolean)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>918,1078</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ReturnTaskToAnymate_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="26">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Anymate.UiPath</x:String>
      <x:String>Anymate.UiPath.Tasks</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="28">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Anymate.UiPath</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:Annotation.AnnotationText="Will return the Task to Anymate, either with Error, Manual or Solved status as well as log what happened with the Task along with extra log fields.&#xA;&#xA;Sending a Task to the Manual queue is done when something expected happens, such as a business rule is triggered, when a Mate is working on a Task. It is the result of an agreement between the business and the automation team, where it is clear that the Mate can not solve the Task and it is needed that an employee takes a look at the Task. Likewise, it can be the result of a data problem, such as an email missing the &quot;@&quot; or a phonenumber expecting 8 characters only have 7. &#xA;&#xA;Returning the Task with an Error is used for indication that something unexpected happened that the Mate was not able to handle, often referred to as an exception. Something unexpected could be an integer suddenly behaving as a string, or a variable being empty when it shouldn't. It can be that an application or API did not respond as expected, or an object was null when it should have been initialized. In some processes, it makes sense to retry when an Error happens and in others, it could create a lot of trouble for the business if done. &#xA;&#xA;The boolean RetryTask will indicate if the Task should be retried or not if it has an error in the first place. Anymate suggest to assign it to either True or False before invoking ReturnTaskToAnymate, however as it depends on the given process that is being automated, we have left this choice to the developer. It also leaves room to control from exception to exception if it should trigger the Task being retried later or not. This could make sense if for instance there is a point of no return in the Process, and the exception happens before or after that point." DisplayName="ReturnTaskToAnymate" sap:VirtualizedContainerService.HintSize="928,873" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="succeeded" />
      <Variable x:TypeArguments="x:String" Name="responseMsg" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">410,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">440,77.5 440,96.5</av:PointCollection>
        <x:Double x:Key="Width">894</x:Double>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID6</x:Reference>
    </Flowchart.StartNode>
    <FlowDecision x:Name="__ReferenceID6" Condition="[in_SendToError]" DisplayName="Error?" sap:VirtualizedContainerService.HintSize="70,87" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <av:Point x:Key="ShapeLocation">405,96.5</av:Point>
          <av:Size x:Key="ShapeSize">70,87</av:Size>
          <av:PointCollection x:Key="FalseConnector">475,140 620,140 620,286.5</av:PointCollection>
          <av:PointCollection x:Key="TrueConnector">405,140 220,140 220,206.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <FlowDecision.True>
        <FlowDecision x:Name="__ReferenceID5" Condition="[in_RetryTask]" DisplayName="Retry?" sap:VirtualizedContainerService.HintSize="70,87" sap2010:WorkflowViewState.IdRef="FlowDecision_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <av:Point x:Key="ShapeLocation">185,206.5</av:Point>
              <av:Size x:Key="ShapeSize">70,87</av:Size>
              <av:PointCollection x:Key="FalseConnector">255,250 340,250 340,377</av:PointCollection>
              <av:PointCollection x:Key="TrueConnector">185,250 100,250 100,377</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <FlowDecision.True>
            <FlowStep x:Name="__ReferenceID4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">0,377</av:Point>
                  <av:Size x:Key="ShapeSize">200,66</av:Size>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Retry Task" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[in_TaskId &gt; 0]" sap:VirtualizedContainerService.HintSize="583,739" sap2010:WorkflowViewState.IdRef="If_4">
                  <If.Then>
                    <TryCatch DisplayName="Try to send to Retry" sap:VirtualizedContainerService.HintSize="438,591" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                      <TryCatch.Try>
                        <aut:RetryTask AnymateClient="[in_AnymateClient]" Comment="[in_Comment]" DisplayName="Retry task" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="RetryTask_1" Message="[responseMsg]" Reason="[in_Reason]" Succeeded="[succeeded]" TaskId="[in_TaskId]" />
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ActivityAction x:TypeArguments="s:Exception">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                            </ActivityAction.Argument>
                            <aut:RetryTask AnymateClient="[in_AnymateClient]" Comment="[in_Comment]" DisplayName="Retry task" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="RetryTask_2" Message="[responseMsg]" Reason="[in_Reason]" Succeeded="[succeeded]" TaskId="[in_TaskId]" />
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                      <TryCatch.Finally>
                        <Sequence sap2010:Annotation.AnnotationText="Includes custom log fields to the log message.&#xA;They are removed after logging to prevent duplicated status messages about a single transaction." DisplayName="Log Retry with additional logging fields" sap:VirtualizedContainerService.HintSize="376,364" sap2010:WorkflowViewState.IdRef="Sequence_7">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:AddLogFields DisplayName="Add transaction log fields (Success)" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddLogFields_4">
                            <ui:AddLogFields.Fields>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_TaskStatus">
                                <Literal x:TypeArguments="x:String">Error</Literal>
                              </InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_TaskId">
                                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TaskId.ToString" />
                              </InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_Reason">
                                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Reason" />
                              </InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_ResponseMsg">
                                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="responseMsg" />
                              </InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_Succeeded">
                                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="succeeded.ToString" />
                              </InArgument>
                            </ui:AddLogFields.Fields>
                          </ui:AddLogFields>
                          <ui:LogMessage DisplayName="Log Message (Error)" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Error" Message="[in_Config(&quot;LogMessage_Retry&quot;).ToString + &quot; TaskId: &quot; + in_TaskId.ToString]" />
                          <ui:RemoveLogFields DisplayName="Remove transaction log fields (Success)" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="RemoveLogFields_4">
                            <ui:RemoveLogFields.Fields>
                              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="8">
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String">logF_TaskStatus</Literal>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String">logF_TaskId</Literal>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String">logF_Reason</Literal>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String">logF_ResponseMsg</Literal>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String">logF_Succeeded</Literal>
                                </InArgument>
                              </scg:List>
                            </ui:RemoveLogFields.Fields>
                          </ui:RemoveLogFields>
                        </Sequence>
                      </TryCatch.Finally>
                    </TryCatch>
                  </If.Then>
                </If>
              </Sequence>
            </FlowStep>
          </FlowDecision.True>
          <FlowDecision.False>
            <FlowStep x:Name="__ReferenceID1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">240,377</av:Point>
                  <av:Size x:Key="ShapeSize">200,66</av:Size>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Send to Error" sap:VirtualizedContainerService.HintSize="621,506" sap2010:WorkflowViewState.IdRef="Sequence_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[in_TaskId &gt; 0]" sap:VirtualizedContainerService.HintSize="579,414" sap2010:WorkflowViewState.IdRef="If_1">
                  <If.Then>
                    <TryCatch DisplayName="Try to send to Error" sap:VirtualizedContainerService.HintSize="434,266" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                      <TryCatch.Try>
                        <aut:ErrorTask AnymateClient="[in_AnymateClient]" Comment="[in_Comment]" DisplayName="Error task" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="ErrorTask_2" Message="[responseMsg]" Reason="[in_Reason]" Succeeded="[succeeded]" TaskId="[in_TaskId]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </aut:ErrorTask>
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,104" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ActivityAction x:TypeArguments="s:Exception">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                            </ActivityAction.Argument>
                            <aut:ErrorTask AnymateClient="[in_AnymateClient]" Comment="[in_Comment]" DisplayName="Error task" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="ErrorTask_4" Message="[responseMsg]" Reason="[in_Reason]" Succeeded="[succeeded]" TaskId="[in_TaskId]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </aut:ErrorTask>
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                      <TryCatch.Finally>
                        <Sequence sap2010:Annotation.AnnotationText="Includes custom log fields to the log message.&#xA;They are removed after logging to prevent duplicated status messages about a single transaction." DisplayName="Log Error with additional logging fields" sap:VirtualizedContainerService.HintSize="376,364" sap2010:WorkflowViewState.IdRef="Sequence_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:AddLogFields DisplayName="Add transaction log fields (Success)" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddLogFields_5">
                            <ui:AddLogFields.Fields>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_TaskStatus">Error</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_TaskId">[in_TaskId.ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_Reason">[in_Reason]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_ResponseMsg">[responseMsg]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_Succeeded">[succeeded.ToString]</InArgument>
                            </ui:AddLogFields.Fields>
                          </ui:AddLogFields>
                          <ui:LogMessage DisplayName="Log Message (Error)" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error" Message="[in_Config(&quot;LogMessage_Error&quot;).ToString + &quot; TaskId: &quot; + in_TaskId.ToString]" />
                          <ui:AddLogFields DisplayName="Add transaction log fields (Success)" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddLogFields_8">
                            <ui:AddLogFields.Fields>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_TaskStatus">Error</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_TaskId">[in_TaskId.ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_Reason">[in_Reason]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_ResponseMsg">[responseMsg]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_Succeeded">[succeeded.ToString]</InArgument>
                            </ui:AddLogFields.Fields>
                          </ui:AddLogFields>
                        </Sequence>
                      </TryCatch.Finally>
                    </TryCatch>
                  </If.Then>
                </If>
              </Sequence>
            </FlowStep>
          </FlowDecision.False>
        </FlowDecision>
      </FlowDecision.True>
      <FlowDecision.False>
        <FlowDecision x:Name="__ReferenceID0" Condition="[in_SendToManual]" DisplayName="Manual ?" sap:VirtualizedContainerService.HintSize="70,87" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <av:Point x:Key="ShapeLocation">585,286.5</av:Point>
              <av:Size x:Key="ShapeSize">70,87</av:Size>
              <av:PointCollection x:Key="TrueConnector">585,330 510,330 510,507</av:PointCollection>
              <av:PointCollection x:Key="FalseConnector">655,330 770,330 770,507</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <FlowDecision.True>
            <FlowStep x:Name="__ReferenceID2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">410,507</av:Point>
                  <av:Size x:Key="ShapeSize">200,66</av:Size>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Send to Manual" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[in_TaskId &gt; 0]" sap:VirtualizedContainerService.HintSize="579,414" sap2010:WorkflowViewState.IdRef="If_2">
                  <If.Then>
                    <TryCatch DisplayName="Try to send to Manual" sap:VirtualizedContainerService.HintSize="434,266" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                      <TryCatch.Try>
                        <aut:ManualTask AnymateClient="[in_AnymateClient]" Comment="[in_Comment]" DisplayName="Manual task" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="ManualTask_2" Message="[responseMsg]" Reason="[in_Reason]" Succeeded="[succeeded]" TaskId="[in_TaskId]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </aut:ManualTask>
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,104" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ActivityAction x:TypeArguments="s:Exception">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                            </ActivityAction.Argument>
                            <aut:ManualTask AnymateClient="[in_AnymateClient]" Comment="[in_Comment]" DisplayName="Manual task" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="ManualTask_4" Message="[responseMsg]" Reason="[in_Reason]" Succeeded="[succeeded]" TaskId="[in_TaskId]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </aut:ManualTask>
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                      <TryCatch.Finally>
                        <Sequence sap2010:Annotation.AnnotationText="Includes custom log fields to the log message.&#xA;They are removed after logging to prevent duplicated status messages about a single transaction." DisplayName="Log Manual with additional logging fields" sap:VirtualizedContainerService.HintSize="376,364" sap2010:WorkflowViewState.IdRef="Sequence_3">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:AddLogFields DisplayName="Add transaction log fields (Success)" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddLogFields_6">
                            <ui:AddLogFields.Fields>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_TaskStatus">Error</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_TaskId">[in_TaskId.ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_Reason">[in_Reason]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_ResponseMsg">[responseMsg]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_Succeeded">[succeeded.ToString]</InArgument>
                            </ui:AddLogFields.Fields>
                          </ui:AddLogFields>
                          <ui:LogMessage DisplayName="Log Message (Manual)" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[in_Config(&quot;LogMessage_Manual&quot;).ToString + &quot; TaskId: &quot; + in_TaskId.ToString]" />
                          <ui:AddLogFields DisplayName="Add transaction log fields (Success)" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddLogFields_9">
                            <ui:AddLogFields.Fields>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_TaskStatus">Error</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_TaskId">[in_TaskId.ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_Reason">[in_Reason]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_ResponseMsg">[responseMsg]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_Succeeded">[succeeded.ToString]</InArgument>
                            </ui:AddLogFields.Fields>
                          </ui:AddLogFields>
                        </Sequence>
                      </TryCatch.Finally>
                    </TryCatch>
                  </If.Then>
                </If>
              </Sequence>
            </FlowStep>
          </FlowDecision.True>
          <FlowDecision.False>
            <FlowStep x:Name="__ReferenceID3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">670,507</av:Point>
                  <av:Size x:Key="ShapeSize">200,66</av:Size>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Send to Solved" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_6">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[in_TaskId &gt; 0]" sap:VirtualizedContainerService.HintSize="583,435" sap2010:WorkflowViewState.IdRef="If_3">
                  <If.Then>
                    <TryCatch DisplayName="Try to send to Solved" sap:VirtualizedContainerService.HintSize="438,287" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                      <TryCatch.Try>
                        <aut:SolveTask AnymateClient="[in_AnymateClient]" Comment="[in_Comment]" DisplayName="Solve task" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="SolveTask_4" Message="[responseMsg]" Reason="[in_Reason]" Succeeded="[succeeded]" TaskId="[in_TaskId]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </aut:SolveTask>
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ActivityAction x:TypeArguments="s:Exception">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                            </ActivityAction.Argument>
                            <aut:SolveTask AnymateClient="[in_AnymateClient]" Comment="[in_Comment]" DisplayName="Solve task" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="SolveTask_3" Message="[responseMsg]" Reason="[in_Reason]" Succeeded="[succeeded]" TaskId="[in_TaskId]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </aut:SolveTask>
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                      <TryCatch.Finally>
                        <Sequence sap2010:Annotation.AnnotationText="Includes custom log fields to the log message.&#xA;They are removed after logging to prevent duplicated status messages about a single transaction." DisplayName="Log Success with additional logging fields" sap:VirtualizedContainerService.HintSize="376,364" sap2010:WorkflowViewState.IdRef="Sequence_5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:AddLogFields DisplayName="Add transaction log fields (Success)" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddLogFields_7">
                            <ui:AddLogFields.Fields>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_TaskStatus">Error</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_TaskId">[in_TaskId.ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_Reason">[in_Reason]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_ResponseMsg">[responseMsg]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_Succeeded">[succeeded.ToString]</InArgument>
                            </ui:AddLogFields.Fields>
                          </ui:AddLogFields>
                          <ui:LogMessage DisplayName="Log Message (Solved)" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[in_Config(&quot;LogMessage_Success&quot;).ToString + &quot; TaskId: &quot; + in_TaskId.ToString]" />
                          <ui:AddLogFields DisplayName="Add transaction log fields (Success)" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddLogFields_10">
                            <ui:AddLogFields.Fields>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_TaskStatus">Error</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_TaskId">[in_TaskId.ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_Reason">[in_Reason]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_ResponseMsg">[responseMsg]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="logF_Succeeded">[succeeded.ToString]</InArgument>
                            </ui:AddLogFields.Fields>
                          </ui:AddLogFields>
                        </Sequence>
                      </TryCatch.Finally>
                    </TryCatch>
                  </If.Then>
                </If>
              </Sequence>
            </FlowStep>
          </FlowDecision.False>
        </FlowDecision>
      </FlowDecision.False>
    </FlowDecision>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
  </Flowchart>
</Activity>