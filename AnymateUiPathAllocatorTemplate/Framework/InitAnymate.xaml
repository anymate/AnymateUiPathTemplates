<Activity mc:Ignorable="sap sap2010" x:Class="InitAnymate" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:au="clr-namespace:Anymate.UiPath;assembly=Anymate.UiPath" xmlns:aug="clr-namespace:Anymate.UiPath.General;assembly=Anymate.UiPath" xmlns:aur="clr-namespace:Anymate.UiPath.Runs;assembly=Anymate.UiPath" xmlns:aur1="clr-namespace:Anymate.UiPath.Rules;assembly=Anymate.UiPath" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="out_AnymateClient" Type="OutArgument(au:AnymateClient)" />
    <x:Property Name="out_RunId" Type="OutArgument(x:Int64)" />
    <x:Property Name="out_RulesJsonString" Type="OutArgument(x:String)" />
    <x:Property Name="out_RulesObject" Type="OutArgument(njl:JObject)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1208,845</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>InitAnymate_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="32">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Anymate.UiPath</x:String>
      <x:String>Anymate.UiPath.General</x:String>
      <x:String>Anymate.UiPath.Runs</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>Anymate.UiPath.Rules</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="27">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>Anymate.UiPath</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="InitAnymate" sap:VirtualizedContainerService.HintSize="591,640" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="OkToRun" />
      <Variable x:TypeArguments="x:String" Name="processKey" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign DisplayName="Get ProcessKey from Config" sap:VirtualizedContainerService.HintSize="549,60" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[processKey]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_Config("Anymate.ProcessKey").ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <aug:InitializeClient AnymateClient="[out_AnymateClient]" ClientId="[in_Config(&quot;Anymate.ClientId&quot;).ToString]" DisplayName="Initialize client" sap:VirtualizedContainerService.HintSize="549,22" sap2010:WorkflowViewState.IdRef="InitializeClient_1" Password="[in_Config(&quot;Anymate.Password&quot;).ToString]" Secret="[in_Config(&quot;Anymate.Secret&quot;).ToString]" Username="[in_Config(&quot;Anymate.Username&quot;).ToString]" />
    <aur:OkToRun AnymateClient="[out_AnymateClient]" DisplayName="Ok to run" sap:VirtualizedContainerService.HintSize="549,22" sap2010:WorkflowViewState.IdRef="OkToRun_1" ItIsOkToRun="[OkToRun]" ProcessKey="[processKey]" />
    <If Condition="[OkToRun]" sap:VirtualizedContainerService.HintSize="549,324" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="242,176" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <aur:StartOrGetRun AnymateClient="[out_AnymateClient]" DisplayName="Start or get run" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="StartOrGetRun_1" ProcessKey="[processKey]" RunId="[out_RunId]" />
          <aur1:GetRules AnymateClient="[out_AnymateClient]" DisplayName="Get rules" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GetRules_1" JsonObject="[out_RulesObject]" JsonString="[out_RulesJsonString]" ProcessKey="[processKey]" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Assign DisplayName="No Run in Progress, Nothing to do" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int64">[out_RunId]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int64">-1</InArgument>
          </Assign.Value>
        </Assign>
      </If.Else>
    </If>
  </Sequence>
</Activity>